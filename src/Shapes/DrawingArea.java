/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Shapes;

import java.awt.Graphics;
import java.awt.Point;
import java.util.ArrayList;
import javax.swing.SwingUtilities;

/*
 *
 * @author ADMIN
 */
public class DrawingArea extends javax.swing.JPanel {

//    ShapeEngine e = new ShapeEngine();
     ArrayList<ShapesAbstractClass> x = new ArrayList<>();
    static int selectedIndex = -1;
     int resizedIndex=-1; 
     boolean resize; 

    // ArrayList<Shape> x = new ArrayList<>();
    /**
     * Creates new form DrawingArea
     */
    public DrawingArea() {
        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
       for (int i = 0; i < x.size(); i++) {
            x.get(i).draw(g);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
         Paint paint = (Paint) SwingUtilities.getWindowAncestor(this);
         Point p = evt.getPoint();
         
//        for (int i=x.size()-1; i>=0; i--) {
//            if (x.get(i).contains(p)) {
//                selectedIndex = i;
//                paint.setComboBox(i);
//                x.get(i).setDraggingPoint(p);
//                return;
//            }
//        }
//        selectedIndex = -1;
//        paint.setComboBox(-1);
        
        if (selectedIndex != -1) {  
            
            System.out.println("selected index: "+ selectedIndex);
            Shape s = x.get(selectedIndex);
            resize=false; //flag 
            if(s instanceof LineSeg l)
            {
                if (l.UpperPoint(p)||l.LowerPoint(p)) //if selected at resizing points
                {
                    l.setDraggingPoint(p); 
                   resizedIndex=selectedIndex; 
                    resize=true; //indicates I'll resize shape
                    return;
                }
            }
            else if (s instanceof Rectangle r) {
                if (r.TopLeft(p)||r.TopRight(p)||r.BottomLeft(p)||r.BottomRight(p)) {
                    r.setDraggingPoint(p);
                   resizedIndex = selectedIndex;
                    resize=true;
                    return;
                }
            }
             else if(s instanceof Circle c)
                {
                   if (c.TopLeft(p)||c.TopRight(p)||c.BottomLeft(p)||c.BottomRight(p))
                   {
                       c.setDraggingPoint(p);
                     resizedIndex= selectedIndex; 
                       resize=true;
                       return; 
                   }
                }
             else if (s instanceof Triangle t)
             {
               if (t.pointOne(p) || t.pointTwo(p) || t.pointThree(p))
                {
                    t.setDraggingPoint(p);
                   resizedIndex = selectedIndex;
                    resize=true;
                    return;
                
                }
             }
        }
        if (selectedIndex != -1) { //if selected by not at resizing points
            x.get(selectedIndex).setSelected(false);
            repaint();
        }
       resizedIndex = -1;
        for (int i = x.size() - 1; i >= 0; i--) {
            if (x.get(i).contains(p)) {
                selectedIndex = i;
                paint.setComboBox(i);
                x.get(i).setDraggingPoint(p);
                x.get(i).setSelected(true);
                repaint();
                return;
            }
        }
        
        selectedIndex = -1;
        paint.setComboBox(-1);
     

        
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        
         Point p = evt.getPoint();
         if (resize==true) {
            x.get(selectedIndex).resize(p);
            x.get(selectedIndex).setDraggingPoint(p);
            repaint();
        } else if (selectedIndex!=-1) {
                x.get(selectedIndex).moveTo(p);
                x.get(selectedIndex).setDraggingPoint(p);
                repaint();
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
}
